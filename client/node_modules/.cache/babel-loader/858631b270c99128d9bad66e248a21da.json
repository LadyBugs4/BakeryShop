{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\bb\\\\BakeryShop4\\\\client\\\\src\\\\component\\\\order.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; //import { fetchOrders } from \"../actions/orderActions\";\n//import formatCurrency from \"../util\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    const {\n      orders\n    } = this.props;\n    return !orders ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, \"Orders\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"orders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, \"NAME\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, \"EMAIL\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, \"ADDRESS\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, \"ITEMS\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, order.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \" \", formatCurrency(order.total)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, order.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, order.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, order.address), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, order.cartItems.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, item.count, \" \", \" x \", \" \", item.title))))))));\n  }\n\n}\n\nexport default connect(state => ({\n  orders: state.order.orders\n}), {\n  fetchOrders\n})(Orders);","map":{"version":3,"sources":["C:/Users/DELL/Desktop/bb/BakeryShop4/client/src/component/order.js"],"names":["React","Component","connect","Orders","componentDidMount","props","fetchOrders","render","orders","map","order","_id","createdAt","formatCurrency","total","name","email","address","cartItems","item","count","title","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,WAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACA,WAAO,CAACG,MAAD,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,GAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,SAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMC,cAAc,CAACH,KAAK,CAACI,KAAP,CAApB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACK,IAAX,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,KAAK,CAACM,KAAX,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,KAAK,CAACO,OAAX,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,KAAK,CAACQ,SAAN,CAAgBT,GAAhB,CAAqBU,IAAD,iBACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACC,KADR,OACgB,KADhB,OACwBD,IAAI,CAACE,KAD7B,CADD,CADH,CAPF,CADD,CADH,CAZF,CAFF,CAHF;AAuCD;;AA7C4B;;AA+C/B,eAAenB,OAAO,CACnBoB,KAAD,KAAY;AACVd,EAAAA,MAAM,EAAEc,KAAK,CAACZ,KAAN,CAAYF;AADV,CAAZ,CADoB,EAIpB;AACEF,EAAAA;AADF,CAJoB,CAAP,CAObH,MAPa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import { fetchOrders } from \"../actions/orderActions\";\r\n//import formatCurrency from \"../util\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchOrders();\r\n  }\r\n  render() {\r\n    const { orders } = this.props;\r\n    return !orders ? (\r\n      <div>Orders</div>\r\n    ) : (\r\n      <div className=\"orders\">\r\n        <h2>Orders</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADDRESS</th>\r\n              <th>ITEMS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td> {formatCurrency(order.total)}</td>\r\n                <td>{order.name}</td>\r\n                <td>{order.email}</td>\r\n                <td>{order.address}</td>\r\n                <td>\r\n                  {order.cartItems.map((item) => (\r\n                    <div>\r\n                      {item.count} {\" x \"} {item.title}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    orders: state.order.orders,\r\n  }),\r\n  {\r\n    fetchOrders,\r\n  }\r\n)(Orders);"]},"metadata":{},"sourceType":"module"}